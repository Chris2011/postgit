/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.informax.postgit;

import es.informax.postgit.red.AccionRedListUsers;
import es.informax.postgit.red.AccionRedLogin;
import es.informax.postgit.red.Comunicador;
import es.informax.postgit.red.EventoRed;
import es.informax.postgit.red.EventoRedListener;
import java.awt.Component;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbPreferences;

final class PostgitPanel extends javax.swing.JPanel {

    private final PostgitOptionsPanelController controller;

    PostgitPanel(PostgitOptionsPanelController controller) {
        this.controller = controller;
        initComponents();

        final Comunicador comunicadorLogin = new Comunicador(getServerUrl() + "session", new AccionRedLogin(getUser(), getPass()), null);
        EventoRedListener eventoRedListener = new EventoRedListener() {
            
            @Override
            public void comunicacionCompletada(EventoRed evt) {
                if(evt.isCorrecto()) {
                    JSONObject session = (JSONObject)evt.getResultado();
                    String token = String.valueOf(session.get("private_token"));
                    
                    Comunicador comunicadorUsers = new Comunicador(getServerUrl() + "users?private_token=" + token, new AccionRedListUsers(token), new EventoRedListener() {
                        @Override
                        public void comunicacionCompletada(EventoRed evt) {
                            if(evt.isCorrecto()) {
                                JSONObject usuariosMarcados = new JSONObject();
                                try {
                                    JSONParser parser = new JSONParser();
                                    usuariosMarcados = (JSONObject)parser.parse(NbPreferences.forModule(PostgitPanel.class).get("usuariosMarcados", "{}"));
                                }
                                catch(ParseException ex) { }
                                
                                JSONArray users = (JSONArray)evt.getResultado();
                                for(Object user : users) {
                                    JSONObject iter = (JSONObject)user;

                                    PanelDeveloper panelDeveloper = new PanelDeveloper(Boolean.getBoolean(String.valueOf(usuariosMarcados.get(iter.get("id")))), String.valueOf(iter.get("avatar_url")), String.valueOf(iter.get("name")), Integer.parseInt(String.valueOf(iter.get("id"))));
                                    panelUsuarios.add(panelDeveloper);
                                }
                            }
                            else {
                                DialogDisplayer.getDefault().notify(new NotifyDescriptor.Message("Error obtaining users."));
                            }
                        }
                    });
                    comunicadorUsers.setRequestMethod("GET");
                    comunicadorUsers.ejecutarAccion();
                }
                else {
                    DialogDisplayer.getDefault().notify(new NotifyDescriptor.Message("Login error."));
                }
            }
        };
        comunicadorLogin.setListener(eventoRedListener);
        comunicadorLogin.ejecutarAccion();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textURL = new javax.swing.JTextField();
        textUser = new javax.swing.JTextField();
        textURLHook = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelUsuarios = new javax.swing.JPanel();
        textPass = new javax.swing.JPasswordField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.jLabel1.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.jLabel2.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.jLabel3.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.jLabel4.text")); // NOI18N

        textURL.setText(org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.textURL.text")); // NOI18N

        textUser.setText(org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.textUser.text")); // NOI18N

        textURLHook.setText(org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.textURLHook.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.jLabel5.text")); // NOI18N

        panelUsuarios.setLayout(new javax.swing.BoxLayout(panelUsuarios, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(panelUsuarios);

        textPass.setText(org.openide.util.NbBundle.getMessage(PostgitPanel.class, "PostgitPanel.textPass.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textURL, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                                .addComponent(textUser, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textURLHook))
                            .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textURLHook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 132, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        textURL.setText(NbPreferences.forModule(PostgitPanel.class).get("url", ""));
        textUser.setText(NbPreferences.forModule(PostgitPanel.class).get("user", ""));
        textPass.setText(NbPreferences.forModule(PostgitPanel.class).get("pass", ""));
        textURLHook.setText(NbPreferences.forModule(PostgitPanel.class).get("urlHook", ""));
    }

    void store() {
        NbPreferences.forModule(PostgitPanel.class).put("url", textURL.getText());
        NbPreferences.forModule(PostgitPanel.class).put("user", textUser.getText());
        NbPreferences.forModule(PostgitPanel.class).put("pass", String.valueOf(textPass.getPassword()));
        NbPreferences.forModule(PostgitPanel.class).put("urlHook", textURLHook.getText());
        
        JSONObject usuarios = new JSONObject();
        for(Component componente : panelUsuarios.getComponents()) {
            PanelDeveloper panel = (PanelDeveloper)componente;
            
            usuarios.put(panel.getId(), panel.isSelected());
        }
        NbPreferences.forModule(PostgitPanel.class).put("usuariosMarcados", usuarios.toJSONString());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    
    public static String getServerUrl() {
        return NbPreferences.forModule(PostgitPanel.class).get("url", "") + "/api/v3/";
    }
    
    public static String getUser() {
        return NbPreferences.forModule(PostgitPanel.class).get("user", "");
    }
    
    public static String getPass() {
        return NbPreferences.forModule(PostgitPanel.class).get("pass", "");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelUsuarios;
    private javax.swing.JPasswordField textPass;
    private javax.swing.JTextField textURL;
    private javax.swing.JTextField textURLHook;
    private javax.swing.JTextField textUser;
    // End of variables declaration//GEN-END:variables
}
